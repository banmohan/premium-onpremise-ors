#!/bin/bash
set -x

CWD=$(pwd)

ORS_API_KEY=orsApiKey
BITLY_API_KEY=bitlyApiKey
BITLY_LOGIN=bitlyLogin

if [[ $EUID -eq 0 ]]; then
    echo "This script should not run as the root user (sudo)."
    echo "Do not use sudo or run as root user."
    echo "If root privilege is needed, script will ask accordingly."
    exit 1
fi

if [ $# -ne 1 ]; then
  echo "Usage: $0 <server_url>"
  exit 1
fi
SERVER_URL="$1"
if [[ ! "$SERVER_URL" =~ ^[a-zA-Z0-9][a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]; then
  echo "Invalid server URL format: $SERVER_URL"
  exit 1
fi

./down
cd $CWD

sed "s/server.name.com/$SERVER_URL/g" premium-onpremise-ors > premium-onpremise-ors-new
sudo cp premium-onpremise-ors-new /etc/nginx/sites-available/premium-onpremise-ors
sudo ln -s /etc/nginx/sites-available/premium-onpremise-ors /etc/nginx/sites-enabled/premium-onpremise-ors
rm premium-onpremise-ors-new
sed "s/server.name.com/$SERVER_URL/g" premium-onpremise-map > premium-onpremise-map-new
sudo cp premium-onpremise-map-new /etc/nginx/sites-available/premium-onpremise-map
sudo ln -s /etc/nginx/sites-available/premium-onpremise-map /etc/nginx/sites-enabled/premium-onpremise-map
rm premium-onpremise-map-new
sudo systemctl restart nginx

wget https://raw.githubusercontent.com/GIScience/openrouteservice/master/docker-compose.yml
sed -i "s/8080:/9980:/g" docker-compose.yml
sed -i "s/9001:/9901:/g" docker-compose.yml
sed -i "s/BUILD_GRAPHS=False/BUILD_GRAPHS=True/g" docker-compose.yml
sed -i "s|#    build:|    build:|g" docker-compose.yml
sed -i "s|#      context: ./|      context: ./|g" docker-compose.yml
sed -i "s|#      args:|      args:|g" docker-compose.yml
sed -i "s|#        OSM_FILE: ./ors-api/src/test/files/heidelberg.osm.gz|        OSM_FILE: ./map.osm.pbf|g" docker-compose.yml

git clone https://github.com/GIScience/ors-map-client.git
cd ors-map-client/src && cp config-examples/* config && for i in config/*-example.js; do mv -- "$i" "${i%-example.js}.js"; done
cd $CWD/ors-map-client/src/config
sed -i "s|put-here-an-ors-api-key|$ORS_API_KEY|g" app-config.js
sed -i "s|put-the-bitly-api-key-here|$BITLY_API_KEY|g" app-config.js
sed -i "s|put-the-bitly-login-here|$BITLY_LOGIN|g" app-config.js
sed -i "s|useORSMenu: true|useORSMenu: false|g" app-config.js
sed -i "s|appName: 'Openrouteservice Maps'|appName: 'Premium Maps'|g" app-config.js
sed -i "s|footerAppName: 'openrouteservice'|footerAppName: 'Premium'|g" app-config.js
sed -i "s|footerDevelopedByLink: 'https://www.heigit.org/'|footerDevelopedByLink: 'https://www.premiumtech.com.np/'|g" app-config.js
sed -i "s|https://api.openrouteservice.org|http://ors.$SERVER_URL|g" default-map-settings.js
cd $CWD/ors-map-client
sed -i "s|8080:|9981:|g" docker-compose.yml
cd $CWD

pbf_url="https://download.geofabrik.de/asia/nepal-latest.osm.pbf"
output_file="map.osm.pbf"
if [ -e "$output_file" ]; then
    echo "Map already exists. Skipping download."
else
    if wget -O $output_file "$pbf_url"; then
        echo "Map successfully downloaded."
    else
        echo "Map Download failed. Exiting."
        exit 1
    fi
fi

git clone https://github.com/pelias/docker.git pelias && cd pelias
chmod 777 pelias
sudo ln -s "$(pwd)/pelias" /usr/local/bin/pelias
cp $CWD/pelias-nepal $CWD/pelias/projects/nepal -R
cd projects/nepal
mkdir ./data
sed -i '/DATA_DIR/d' .env
echo 'DATA_DIR=./data' >> .env
/usr/local/bin/pelias compose pull
/usr/local/bin/pelias elastic start
/usr/local/bin/pelias elastic wait
/usr/local/bin/pelias elastic create
/usr/local/bin/pelias download all
/usr/local/bin/pelias prepare all
/usr/local/bin/pelias import all
/usr/local/bin/pelias compose up
cd $CWD

mkdir -p ./docker/data/
cp -f $output_file ./docker/data/osm_file.pbf
docker compose up -d
cd ors-map-client
docker compose up -d